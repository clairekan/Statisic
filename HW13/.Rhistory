p = P1-P2
z = qnorm((1-0.95)/2, lower.tail = T)
se = sqrt((P1*(1-P1)/N1)+(P2*(1-P2)/N2))
high.c = p - z*se; high.c
low.c = p +z*se; low.c
DP<-function(n,p){
samp=sample(x=c(0,1),n,replace = T,prob=c(1-p,(p)))
phat=sum(samp)/n
return(phat)
}
simu.p1=c()
for(j in 1:1000){
x=DP(N1,P1)
simu.p1[j]=x
}
simu.p2=c()
for(j in 1:1000){
x=DP(N2,P2)
simu.p2[j]=x
}
simu.dif<-simu.p1-simu.p2
hist(simu.dif,probability = T,breaks=20,main="sample distribution of xbar by sampling",col = "rosybrown2")
sqrt((0.3*(1-0.3))/439)
n=1100
phat=0.47
se=0.03
prop.test(x=517,n,alternative="two.sided",conf.level=0.95)
# By calculation
z = qnorm((1-0.95)/2, lower.tail = T)
se = sqrt(p*(1-p)/n)
high.c = phat - z*se; high.c
low.c = phat +z*se; low.c
n<-1100
phat<-0.47
se<-0.03
prop.test(x=517,n,alternative="two.sided",conf.level=0.95)
# By calculation
z = qnorm((1-0.95)/2, lower.tail = T)
se = sqrt(p*(1-p)/n)
n<-1100
phat<-0.47
se<-0.03
prop.test(x=517,n,alternative="two.sided",conf.level=0.95)
# By calculation
z = qnorm((1-0.95)/2, lower.tail = T)
se = sqrt(phat*(1-phat)/n)
high.c = phat - z*se; high.c
low.c = phat +z*se; low.c
n1<-64；u1<-27.5；sd1<-2
n1<-64
n1<-64；u1<-27.5；sd1<-2
n1<-64
u1<-27.5；sd1<-2
n1<-64
u1<-27.5
sd1<-2
n2<-100
u2<-24
sd2<-2
se2<-sd2/sqrt(100)
se2
sqrt((sd1^2/n1)+(sd2^2/n2))
?qt
n1<-25
mu1<-4.5
sd1<-1.6
se1<-1.6/sqrt(n1)
qt((1-0.95)/2,df=25-1,lower.tail=F)
low.c<-mu1-t*se；low.c
n1<-25
mu1<-4.5
sd1<-1.6
se1<-1.6/sqrt(n1)
t<-qt((1-0.95)/2,df=25-1,lower.tail=F)
t
low.c<-mu1-t*se；low.c
low.c<-mu1-t*se;low.c
low.c<-mu1-t*se1;low.c
high.c<-mu1+t*se1;high.c
n1<-25
mu1<-4.5
sd1<-1.6
se1<-1.6/sqrt(n1)
t1<-qt((1-0.95)/2,df=25-1,lower.tail=F)
t1
low.c<-mu1-t1*se1;low.c
high.c<-mu1+t1*se1;high.c
n2<-23
mu2<-8.1
sd2<-1.8
se2<-sd2/sqrt(n2)
t2<-qt((1-0.95)/2,df=n2-1,lower.tail=F)
t2
low.c<-mu2-t2*se2;low.c
high.c<-mu2+t2*se2;high.c
plot(c(0,3),type='n',xlim=c(3,9),xlab='',ylab='',axes=F,
main='Comparsion of the two confidence interval')
lines(c(3.839552,5.160448),c(2,2))
text(6.9,2,labels='zinc')
lines(c(3.839552,3.839552),c(1.95,2.05))
lines(c(4.5,4.5),c(1.95,2.05))
lines(c(5.160448,5.160448),c(1.95,2.05))
lines(c( 7.321622,8.878378),c(1,1))
text(6.3,1,labels='placebo')
lines(c( 7.321622, 7.321622),c(0.95,1.05))
lines(c(8.1,8.1),c(0.95,1.05))
lines(c(8.878378,8.878378),c(0.95,1.05))
axis(1)
plot(c(0,3),type='n',xlim=c(3,9),xlab='',ylab='',axes=F,
main='Comparsion of the two confidence interval')
lines(c(3.839552,5.160448),c(2,2))
text(5.3,2,labels='zinc')
lines(c(3.839552,3.839552),c(1.95,2.05))
lines(c(4.5,4.5),c(1.95,2.05))
lines(c(5.160448,5.160448),c(1.95,2.05))
lines(c( 7.321622,8.878378),c(1,1))
text(6.3,1,labels='placebo')
lines(c( 7.321622, 7.321622),c(0.95,1.05))
lines(c(8.1,8.1),c(0.95,1.05))
lines(c(8.878378,8.878378),c(0.95,1.05))
axis(1)
plot(c(0,3),type='n',xlim=c(3,9),xlab='',ylab='',axes=F,
main='Comparsion of the two confidence interval')
lines(c(3.839552,5.160448),c(2,2))
text(5.6,2,labels='zinc')
lines(c(3.839552,3.839552),c(1.95,2.05))
lines(c(4.5,4.5),c(1.95,2.05))
lines(c(5.160448,5.160448),c(1.95,2.05))
lines(c( 7.321622,8.878378),c(1,1))
text(6.3,1,labels='placebo')
lines(c( 7.321622, 7.321622),c(0.95,1.05))
lines(c(8.1,8.1),c(0.95,1.05))
lines(c(8.878378,8.878378),c(0.95,1.05))
axis(1)
plot(c(0,3),type='n',xlim=c(3,9),xlab='',ylab='',axes=F,
main='Comparsion of the two confidence interval')
lines(c(3.839552,5.160448),c(2,2))
text(5.6,2,labels='zinc')
lines(c(3.839552,3.839552),c(1.95,2.05))
lines(c(4.5,4.5),c(1.95,2.05))
lines(c(5.160448,5.160448),c(1.95,2.05))
lines(c( 7.321622,8.878378),c(1,1))
text(7,1,labels='placebo')
lines(c( 7.321622, 7.321622),c(0.95,1.05))
lines(c(8.1,8.1),c(0.95,1.05))
lines(c(8.878378,8.878378),c(0.95,1.05))
axis(1)
plot(c(0,3),type='n',xlim=c(3,9),xlab='',ylab='',axes=F,
main='Comparsion of the two confidence interval')
lines(c(3.839552,5.160448),c(2,2))
text(5.6,2,labels='zinc')
lines(c(3.839552,3.839552),c(1.95,2.05))
lines(c(4.5,4.5),c(1.95,2.05))
lines(c(5.160448,5.160448),c(1.95,2.05))
lines(c( 7.321622,8.878378),c(1,1))
text(6.9,1,labels='placebo')
lines(c( 7.321622, 7.321622),c(0.95,1.05))
lines(c(8.1,8.1),c(0.95,1.05))
lines(c(8.878378,8.878378),c(0.95,1.05))
axis(1)
n<-20;mu<-1.8;sd<-2.1
se<-sd/sqrt(n)
t<-qt((1-0.95)/2,df=n-1,lower.tail=F)
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
g1<-c(72,84,66,72,62,84,72,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt(sd1^2/n1)+(sd2/n2)
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
g1<-c(72,84,66,72,62,84,72,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt(sd1^2/n1)+(sd2/n2)
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
g1<-c(72,84,66,72,62,84,76,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt(sd1^2/n1)+(sd2/n2)
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
g1<-c(72,84,66,72,62,84,76,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt(sd1^2/n2)+(sd2/n2)
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
g1<-c(72,84,66,72,62,84,76,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt(sd1^2/n1)+(sd2^2/n2)
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
g1<-c(72,84,66,72,62,84,76,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt(sd1^2/n1)+sqrt(sd2^2/n2)
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
g1<-c(72,84,66,72,62,84,76,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt((sd1^2/n1)+(sd2^2/n2))
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
sum(g1)/n1
mean(g1)
g1<-c(72,84,66,72,62,84,76,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt((sd1^2/n1)+(sd2^2/n2))
t<-qt((1-0.95)/2,df=n2-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
sp<-sqrt(((n1-1)*sd1^2+(n2-1)*sd2^2)/n1+n2-2)
se<-sqrt(1/n1+1/n2)
low.c<-mu-t*sp*se;low.c
high.c<-mu+t*sp*se;high.c
sp<-sqrt(((n1-1)*sd1^2+(n2-1)*sd2^2)/(n1+n2-2))
se<-sqrt(1/n1+1/n2)
low.c<-mu-t*sp*se;low.c
high.c<-mu+t*sp*se;high.c
sp<-sqrt(((n1-1)*sd1^2+(n2-1)*sd2^2)/(n1+n2-2))
se<-sqrt((1/n1)+(1/n2))
low.c<-mu-t*sp*se;low.c
high.c<-mu+t*sp*se;high.c
sp<-sqrt(((n1-1)*sd1^2+(n2-1)*sd2^2)/(n1+n2-2))
se<-sp*sqrt((1/n1)+(1/n2))
t<-qt((1-0.95)/2,df=n1+n2-2,lower.tail=F)
low.c<-mu-t*sp*se;low.c
high.c<-mu+t*sp*se;high.c
sp<-sqrt(((n1-1)*sd1^2+(n2-1)*sd2^2)/(n1+n2-2))
se<-sp*sqrt((1/n1)+(1/n2))
t<-qt((1-0.95)/2,df=n1+n2-2,lower.tail=F)
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
g1<-c(72,84,66,72,62,84,76,60)
n1<-8;mu1<-sum(g1)/n1;sd1<-sd(g1)
g2<-c(62,72,60,63,75,64,60,52,64,80,68,64)
n2<-12;mu2<-sum(g2)/n2;sd2<-sd(g2)
se<-sqrt((sd1^2/n1)+(sd2^2/n2))
t<-qt((1-0.95)/2,df=n1-1,lower.tail=F)
mu<-mu1-mu2
low.c<-mu-t*se;low.c
high.c<-mu+t*se;high.c
t.test(g1, g2, alternative = 'two.sided', var.equal = F, paired = F, conf.level = 0.95)
n1<-16;n2<-16
d1<-113.75;sd1<-22.64
d2<-99.87;sd2<-12.04
se<-sqrt((sd1^2/n1)+(sd2^2/n2))
n1<-16;n2<-16
d1<-113.75;sd1<-22.64
d2<-99.87;sd2<-12.04
se<-sqrt((sd1^2/n1)+(sd2^2/n2))
se
t<-qt((1-0.95)/2,df=22,lower.tail=F)
d<-d1-d2
low.c<-d-t*se;low.c
high.c<-d+t*se;high.c
g<-c(4,4,5,1,-2,0,2,4,-3,0,0,0,-2,2,1)
d<-mean(g);sd<-sd(g)
se<-sd/sqrt(15)
t<-qt((1-0.9)/2,df=14,lower.tail=F)
low.c<-d-t*se;low.c
high.c<-d+t*se;high.c
Sim_CI<-function(n,mu,sd,m,conf.level){
prob<-(1-conf.level)/2
t.value=qt(prob,df=n-1,lower.tail=FALSE)
mean.x=c()
se.x=c()
CI.half=c()
CI.Up=c()
CI.Lower=c()
Check=c()
#Mumeanltiple sampling
for (i in 1:m){
#one sampling
x<-rnorm(n,mean=mu,sd=sd)
mean.x[i]<-mean(x)
se.x[i]<-sd(x)/sqrt(n)
#calculate one confidence interval
CI.half[i]<-t.value*se.x[i]
CI.Up[i]<-mean.x[i]+CI.half[i]
CI.Lower[i]<-mean.x[i]-CI.half[i]
if(CI.Up[i]>mu & CI.Lower[i]<mu) Check[i]<-1 else Check[i]<-0
}
plot(c(CI.Up,CI.Lower),type="n",pch=19,xlim=c(1,m),xlab="Trial",ylab=expression(mu))  #n=甚麼都不畫
abline(h=mu,col="blue")
#check weather each confidence interval captures the population mean (mu)
for (i in 1:m){
if (Check[i]==1){
points(i, mean.x[i], col="green", pch=10)
points(i, CI.Up[i], col="green", pch=20)
points(i, CI.Lower[i], col="green", pch=20)
lines(c(i,i),c(CI.Lower[i],CI.Up[i]), col="green", pch=19)
}else{
points(i, mean.x[i], col="red", pch=10)
points(i, CI.Up[i], col="red", pch=20)
points(i, CI.Lower[i], col="red", pch=20)
lines(c(i,i),c(CI.Lower[i],CI.Up[i]), col="red", pch=19)
}
}
title(expression(paste("Simulating confidence interval for",mu)))
legend("bottomright",cex=0.6,bty = "n",ncol = 2,
c(expression(paste(mu,"Captured")),expression(paste(mu,"Not Captured"))),
fill = c("green","red"))
No.Captured = m-sum(Check)
RESULT = list(Trial=m, Sample.Size=n,
Population.mean=mu, Population.sd=sd,
Confidence=conf.level,
No.Captured=No.Captured)
return(RESULT)
}
Sim_CI(n=30, m=100, mu=50, sd=5, conf.level=0.95)
Sim_CI<-function(n,mu1,sd1,mu2,sd2,m,conf.level){
prob<-(1-conf.level)/2
t.value=qt(prob,df=n-1,lower.tail=FALSE)
mean.x=c()
se.x=c()
CI.half=c()
CI.Up=c()
CI.Lower=c()
Check=c()
#Mumeanltiple sampling
for (i in 1:m){
#one sampling 1
x1<-rnorm(n,mean=mu1,sd=sd1)
x2<-rnorm(n,mean=mu2,sd=sd2)
x<-x1-x2
mean.x[i]<-mean(x)
se.x[i]<-sd(x)/sqrt(n)
#calculate one confidence interval
CI.half[i]<-t.value*se.x[i]
CI.Up[i]<-mean.x[i]+CI.half[i]
CI.Lower[i]<-mean.x[i]-CI.half[i]
if(CI.Up[i]>mu1-mu2 & CI.Lower[i]<mu1-mu2) Check[i]<-1 else Check[i]<-0
}
plot(c(CI.Up,CI.Lower),type="n",pch=19,xlim=c(1,m),xlab="Trial",ylab=expression(mu))  #n=甚麼都不畫
abline(h=mu,col="blue")
#check weather each confidence interval captures the population mean (mu)
for (i in 1:m){
if (Check[i]==1){
points(i, mean.x[i], col="green", pch=10)
points(i, CI.Up[i], col="green", pch=20)
points(i, CI.Lower[i], col="green", pch=20)
lines(c(i,i),c(CI.Lower[i],CI.Up[i]), col="green", pch=19)
}else{
points(i, mean.x[i], col="red", pch=10)
points(i, CI.Up[i], col="red", pch=20)
points(i, CI.Lower[i], col="red", pch=20)
lines(c(i,i),c(CI.Lower[i],CI.Up[i]), col="red", pch=19)
}
}
title(expression(paste("Simulating confidence interval for",mu)))
legend("bottomright",cex=0.6,bty = "n",ncol = 2,
c(expression(paste(mu,"Captured")),expression(paste(mu,"Not Captured"))),
fill = c("green","red"))
No.Captured = m-sum(Check)
RESULT = list(Trial=m, Sample.Size=n,
Population.mean1=mu1,Population.mean2=mu2,Population.sd1=sd1,Population.sd2=sd2,
Confidence=conf.level,
No.Captured=No.Captured)
return(RESULT)
}
Sim_CI(n=30, m=100, mu1=50, sd1=5, mu2=55,sd2=7,conf.level=0.95)
a<-c(1,2,3,4,5)
b<-c(2,3,4,5,6)
c<-a-b
meanc<-mean(c)
meanc
a<-c(1,2,3,4,5)
b<-c(2,8,4,5,6)
c<-a-b
meanc<-mean(c)
meanc
x<-c(1:19)
sample(x,19)
install.packages("epitools")
(42/209)/(30/209)
(relative-1)*100
relative<-(42/209)/(30/209);relative
(relative-1)*100
short_odd<-42/(209-42);short_odd
nshort_odd<-30/(209-32);nshort_odd
ratio_odd<-short_odd/nshort_odd;ratio_odd
drud1<-c(7,2,5,6)
drug2<-c(8,12,0,4)
drud3<-c(16,9,5,10)
Drug<-data.frame(drud1,drud2,drud3);Drug
drug1<-c(7,2,5,6)
drug2<-c(8,12,0,4)
drud3<-c(16,9,5,10)
Drug<-data.frame(drug1,drug2,drug3);Drug
drug1<-c(7,2,5,6)
drug2<-c(8,12,0,4)
drug3<-c(16,9,5,10)
Drug<-data.frame(drug1,drug2,drug3);Drug
x_bar<-sum(Drug);x_bar
x1_bar<-sum(Drug$drug1);x1_bar
x2_bar<-sum(Drug$drug2);x2_bar
x3_bar<-sum(Drug$drug3);x3_bar
x_bar<-sum(Drug)/12;x_bar
x1_bar<-sum(Drug$drug1)/4;x1_bar
x2_bar<-sum(Drug$drug2)/4;x2_bar
x3_bar<-sum(Drug$drug3)/4;x3_bar
x_bar<-sum(Drug)/12;x_bar
x1_bar<-sum(Drug$drug1)/4;x1_bar
x2_bar<-sum(Drug$drug2)/4;x2_bar
x3_bar<-sum(Drug$drug3)/4;x3_bar
SSGroup<-4*(x1_bar-x_bar)^2+4*(x2_bar-x_bar)^2+4*(x3_bar-x_bar)^2;SSGroup
SSTotal<-(7-x_bar)^2+(2-x_bar)^2+(5-x_bar)^2+(6-x_bar)^2+(8-x_bar)^2+(12-x_bar)^2+(0-x_bar)^2+(4-x_bar)^2+(16-x_bar)^2+(9-x_bar)^2+(5-x_bar)^2+(10-x_bar)^2
SSTotal
SSerror<-212-56
SSerror<-212-56;SSerror
oneway<-aov(Drug)
oneway<-anova(Drug)
blood_pressure<-c(7,2,5,6,8,12,0,4,16,9,5,10)
drug<-factor(c(1,1,1,1,2,2,2,2,3,3,3,3))
A<-aov(blood_pressure~drug)
summary(A)
MSGroup<-SSGroup/3-1
MSE<-SSerror/12-3
F_value<-MSGroup/MSE;F_value
MSGroup<-SSGroup/(3-1)
MSE<-SSerror/(12-3)
F_value<-MSGroup/MSE;F_value
setwd("D:/OneDrive/文件/統計學/HW13")
data<-load('wineratings.rdata')
head(data)
data<-load('wineratings.rdata')
data
data<-load('wineratings.csv')
data<-read.csv('wineratings.csv')
data
data<-read.csv('wineratings.csv')
head(data)
boxplot(Quality~Region,data = data)
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,col=("darkolivegreen3
","khaki1","darksalmon"))
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,col=c("darkolivegreen3
","khaki1","darksalmon"))
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,col=c("darkseagreen2
","khaki1","darksalmon"))
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,col=c("dyellowgreen
","khaki1","darksalmon"))
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,col=c("yellowgreen
","khaki1","darksalmon"))
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,col=c("green
","khaki1","darksalmon"))
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,
col=c("green","khaki1","darksalmon"))
boxplot(Quality~Region,data = data,main="Winer Rating",cex.main=1.6,
col=c("yellowgreen","khaki1","darksalmon"))
reg.mean<-tapply(data$Quality,data$Region,meaen)
reg.mean<-tapply(data$Quality,data$Region,mean)
reg.sd<-tapply(data$Quality,data$Region,sd)
reg.n<-tapply(data$Quality,data$Region,length)
winerate<-data.frame(n=reg.n,mean=reg.mean,sd=reg.sd)
winerate
#install.packages("ggpubr")
library(ggpubr)
# visualize confidence interval for each group
ggline(data, x = "Region", y = "Quality", add = c("mean_ci"),
color = "navy", main = "Confidence interval among groups",
ggtheme = theme_gray())
# visualize std for each group
ggline(data, x = "Region", y = "Quality", add = c("mean_sd"),
color = "firebrick3", main = "Std among groups",
ggtheme = theme_gray())
oneway = aov(Quality ~ Region, data = data)
summary(oneway)
data$Region<-factor(c(1,2,3))
region<-c(data$Region)
data$Region<-factor(region)
oneway = aov(Quality ~ Region, data = data)
summary(oneway)
region<-c(data$Region)
data$Region<-factor(region)
oneway = aov(Quality ~ Region, data = data)
summary(oneway)
